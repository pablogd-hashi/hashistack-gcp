version: '3'

vars:
  DC1_DIR: ../../clusters/dc1/terraform
  DC2_DIR: ../../clusters/dc2/terraform
  PEERING_DIR: .

tasks:
  help:
    desc: "Show cluster peering setup guide"
    cmds:
      - echo " === CONSUL CLUSTER PEERING ==="
      - echo ""
      - echo "Establishes secure service mesh communication between DC1 and DC2"
      - echo ""
      - echo " PREREQUISITES -"
      - echo "   Both DC1 and DC2 clusters deployed"
      - echo "   Environment variables configured - task eval-both"
      - echo "   Nomad-Consul integration configured - task setup-consul:nomad-both"
      - echo ""
      - echo " DOCUMENTATION - consul/peering/README.md"
      - echo ""
      - echo " SETUP TASKS -"
      - echo "  consul:env-setup              - Set environment variables for both clusters"
      - echo "  consul:setup-peering          - Configure mesh gateways and ACLs"
      - echo "  consul:establish-peering      - Create peering connection between clusters"
      - echo "  consul:verify-peering         - Verify peering is working"
      - echo "  consul:deploy-all             - Full automated setup (all steps)"
      - echo ""
      - echo " OPTIONAL TASKS -"
      - echo "  consul:deploy-demo-apps       - Deploy demo applications for testing"
      - echo "  consul:configure-sameness-groups - Configure sameness groups for failover"
      - echo "  consul:cleanup-peering        - Remove peering configuration"
      - echo ""
      - echo " QUICK START -"
      - echo "  task -t tasks/consul:peering.yml consul:deploy-all"

  consul:env-setup:
    desc: "Set environment variables for both clusters"
    cmds:
      - echo "  Setting up environment variables..."
      - echo "Export these variables in your shell:"
      - echo ""
      - echo "# DC1 Environment"
      - cd {{.DC1_DIR}} && terraform output -json environment_setup | jq -r .bash_export
      - echo ""
      - echo "# DC2 Environment" 
      - cd {{.DC2_DIR}} && terraform output -json environment_setup | jq -r .bash_export

  consul:setup-peering:
    desc: "Configure mesh gateways and ACLs for peering"
    cmds:
      - echo " Configuring mesh gateways and ACLs..."
      - echo "This step requires manual execution on both clusters"
      - echo "See - consul/peering/README.md - Phase 3 & 4"
      - echo ""
      - echo "1. SSH to each cluster - task ssh-dc1-server / task ssh-dc2-server"
      - echo "2. Follow Phase 3 - Configure Mesh Gateway ACLs"
      - echo "3. Follow Phase 4 - Deploy Mesh Gateways"

  consul:establish-peering:
    desc: "Create peering connection between clusters"
    cmds:
      - echo "Establishing cluster peering..."
      - echo "This step requires manual execution -"
      - echo ""
      - echo "1. On DC1 - consul peering generate-token -name gcp-dc2-default"
      - echo "2. Copy the token"
      - echo "3. On DC2 - consul peering establish -name gcp-dc1-default -peering-token 'TOKEN'"
      - echo ""
      - echo "See - consul/peering/README.md - Phase 5"

  consul:verify-peering:
    desc: "Verify peering connection status"
    cmds:
      - echo " Verifying peering status..."
      - echo "Run these commands on both clusters to verify -"
      - echo ""
      - echo "consul peering list"
      - echo "nomad job status mesh-gateway"
      - echo ""
      - echo "Expected - Peering status should show 'ACTIVE'"

  consul:deploy-demo-apps:
    desc: "Deploy demo applications for testing peering"
    cmds:
      - echo " Deploying demo applications..."
      - echo "This is optional - only needed for testing cross-cluster communication"
      - echo ""
      - echo "See - consul/peering/README.md - Optional Application Deployment"
      - echo ""
      - echo "1. Deploy backend services on DC2"
      - echo "2. Deploy frontend service on DC1"
      - echo "3. Configure service exports and intentions"

  consul:configure-sameness-groups:
    desc: "Configure sameness groups for automated failover"
    cmds:
      - echo " Configuring sameness groups..."
      - echo "See - consul/peering/README.md - Phase 13 Configure Failover"
      - echo ""
      - echo "This enables automatic failover between clusters"

  consul:deploy-all:
    desc: "Complete automated peering setup"
    cmds:
      - echo " Starting complete cluster peering setup..."
      - task: consul:env-setup
      - echo ""
      - echo "  MANUAL STEPS REQUIRED -"
      - echo "The following steps require manual execution on each cluster -"
      - echo ""
      - echo "1. Configure mesh gateway ACLs (both clusters)"
      - echo "2. Deploy mesh gateways (both clusters)" 
      - echo "3. Generate peering token (DC1)"
      - echo "4. Establish peering connection (DC2)"
      - echo ""
      - echo " Follow the detailed guide - consul/peering/README.md"
      - echo " Use 'task -t tasks/consul:peering.yml consul:verify-peering' to check status"

  consul:cleanup-peering:
    desc: "Remove peering configuration"
    cmds:
      - echo "  Cleaning up peering configuration..."
      - echo "Run on both clusters -"
      - echo ""
      - echo "# Remove peering connections"
      - echo "consul peering delete gcp-dc1-default  # On DC2"
      - echo "consul peering delete gcp-dc2-default  # On DC1"
      - echo ""
      - echo "# Stop mesh gateways"
      - echo "nomad job stop mesh-gateway"

  default:
    desc: "Show help by default"
    cmds:
      - task: help